<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hoso.model.UserMapper">
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.User">
    <constructor>
      <arg column="User_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="User_loginName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="User_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Role_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="User_Name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Department_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="User_Title_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="User_Gender" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    User_ID, User_loginName, User_password, Role_ID, User_Name, Department_ID, User_Title_ID, 
    User_Gender
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hoso.example.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.User">
    <selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      User_ID,
      <if test="userLoginname != null">
        User_loginName,
      </if>
      <if test="userPassword != null">
        User_password,
      </if>
      <if test="roleId != null">
        Role_ID,
      </if>
      <if test="userName != null">
        User_Name,
      </if>
      <if test="departmentId != null">
        Department_ID,
      </if>
      <if test="userTitleId != null">
        User_Title_ID,
      </if>
      <if test="userGender != null">
        User_Gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{userId,jdbcType=INTEGER},
      <if test="userLoginname != null">
        #{userLoginname,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="userTitleId != null">
        #{userTitleId,jdbcType=INTEGER},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        User_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userLoginname != null">
        User_loginName = #{record.userLoginname,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        User_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        Role_ID = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        User_Name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        Department_ID = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.userTitleId != null">
        User_Title_ID = #{record.userTitleId,jdbcType=INTEGER},
      </if>
      <if test="record.userGender != null">
        User_Gender = #{record.userGender,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set User_ID = #{record.userId,jdbcType=INTEGER},
      User_loginName = #{record.userLoginname,jdbcType=VARCHAR},
      User_password = #{record.userPassword,jdbcType=VARCHAR},
      Role_ID = #{record.roleId,jdbcType=INTEGER},
      User_Name = #{record.userName,jdbcType=VARCHAR},
      Department_ID = #{record.departmentId,jdbcType=INTEGER},
      User_Title_ID = #{record.userTitleId,jdbcType=INTEGER},
      User_Gender = #{record.userGender,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
<!--  <sql id="Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <sql id="Update_By_Example_Where_Clause">-->
<!--    <where>-->
<!--      <foreach collection="example.oredCriteria" item="criteria" separator="or">-->
<!--        <if test="criteria.valid">-->
<!--          <trim prefix="(" prefixOverrides="and" suffix=")">-->
<!--            <foreach collection="criteria.criteria" item="criterion">-->
<!--              <choose>-->
<!--                <when test="criterion.noValue">-->
<!--                  and ${criterion.condition}-->
<!--                </when>-->
<!--                <when test="criterion.singleValue">-->
<!--                  and ${criterion.condition} #{criterion.value}-->
<!--                </when>-->
<!--                <when test="criterion.betweenValue">-->
<!--                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}-->
<!--                </when>-->
<!--                <when test="criterion.listValue">-->
<!--                  and ${criterion.condition}-->
<!--                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">-->
<!--                    #{listItem}-->
<!--                  </foreach>-->
<!--                </when>-->
<!--              </choose>-->
<!--            </foreach>-->
<!--          </trim>-->
<!--        </if>-->
<!--      </foreach>-->
<!--    </where>-->
<!--  </sql>-->
<!--  <select id="selectByExample" parameterType="edu.neu.hoso.example.UserExample" resultMap="BaseResultMap">-->
<!--    select-->
<!--    <if test="distinct">-->
<!--      distinct-->
<!--    </if>-->
<!--    <include refid="Base_Column_List" />-->
<!--    from user-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--    <if test="orderByClause != null">-->
<!--      order by ${orderByClause}-->
<!--    </if>-->
<!--  </select>-->
<!--  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.UserExample">-->
<!--    delete from user-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </delete>-->
<!--  -->
<!--  <select id="countByExample" parameterType="edu.neu.hoso.example.UserExample" resultType="java.lang.Integer">-->
<!--    select count(*) from user-->
<!--    <if test="_parameter != null">-->
<!--      <include refid="Example_Where_Clause" />-->
<!--    </if>-->
<!--  </select>-->
</mapper>